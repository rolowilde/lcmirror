#!/bin/bash
TARGET="{{ mirrorsync_definition.target }}"
LOCK="{{ mirrorsync_definition.lock }}"
SOURCE_URL="{{ mirrorsync_definition.source_url }}"
LASTUPDATE_URL="{{ mirrorsync_definition.lastupdate_url }}"
LASTUPDATE_FILE="{{ mirrorsync_definition.lastupdate_file }}"
LOGFILE="{{ mirrorsync_definition.logdir }}/{{ mirrorsync_definition.logfile }}"
LOGCYCLE={{ mirrorsync_definition.logcycle }}
RSYNC_OPTIONS=(
	-rlptH
	--safe-links
	--delete-delay
	--delay-updates
	--timeout={{ mirrorsync_definition.timeout }}
	--contimeout={{ mirrorsync_definition.contimeout }}
	--no-motd
{% for opt in mirrorsync_definition.rsync_options %}
	{{ opt }}
{% endfor %}
)

log() {
	echo "$(date '+%Y-%m-%d %H:%M:%S') $(basename "$0")[$$]: $1"
}

rsync_cmd() {
	[[ -z "$3" ]] || RSYNC_OPTIONS+=("$3")
	log "run rsync ${RSYNC_OPTIONS[*]}"
	rsync "${RSYNC_OPTIONS[@]}" "$1" "$2"
	log "rsync exit code: $?"
}

exec >> $LOGFILE

trap 'rm -f "$LOCK" &>/dev/null && savelog -c $LOGCYCLE -n "$LOGFILE" &>/dev/null' EXIT

exec 9>"${LOCK}"
if ! flock -n 9; then
	trap - EXIT
	log "exit due to running sync"
	exit 1
fi

if [[ -f "$LASTUPDATE_FILE" ]]; then
	if diff -b <(curl -Ls "$LASTUPDATE_URL") "$LASTUPDATE_FILE" >/dev/null; then
		log "exit due to no updates"
		exit 0
	fi
fi

{% if mirrorsync_definition.prescript %}
{{ mirrorsync_definition.prescript }}

{% endif %}
rsync_cmd "$SOURCE_URL" "$TARGET" -v
{% if mirrorsync_definition.postscript %}

{{ mirrorsync_definition.postscript }}
{% endif %}

log "done"
